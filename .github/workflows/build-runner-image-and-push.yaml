name: Build Runner Image and Push to Image Registry

on:
  push:
    tags:
    - "runner-v*.*.*"
  workflow_dispatch: ~

jobs:
  build-runner-image:
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: ${{ vars.IMAGE_REGISTRY || 'higress-registry.cn-hangzhou.cr.aliyuncs.com' }}
      IMAGE_NAME: ${{ vars.RUNNER_IMAGE_NAME || 'higress/runner' }}
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: "Setup Go"
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - name: Setup Golang Caches
        uses: actions/cache@v3
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go
      
      - name: Calculate Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=match,pattern=runner-v(.*),group=1
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.IMAGE_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image and Push
        run: |
          cd src/runner/
          readarray -t IMAGES <<< "${{ steps.docker-meta.outputs.tags }}"
          baseImage=""
          for image in ${IMAGES[@]}; do
            echo "Image: $image"
            if [ -z "$baseImage" ]; then
              GOPROXY="https://proxy.golang.org,direct" IMG="${image}" make docker-buildx-push
              baseImage="$image"
            else
              docker buildx imagetools create "$baseImage" --tag "$image"
            fi
          done
